exports.name="Splunk Search";exports.version="0.1";exports.disabled=false;exports.destroyable=false;const{DEFAULT_TIMEOUT_SECS}=C.internal.HttpUtils;const{RestCollector}=C.internal.Collectors;const restC=new RestCollector;function normalizeSearchQuery(e){if(!e)throw new Error("Missing required parameter search");e=e.trim();if(e.startsWith("search ")||e.startsWith("|")){return e}else{return`search ${e}`}}function getCollectMethod(e){if(e?.includes("v2")&&e?.includes("export")){return"post"}else{return"get"}}function getCollectorConfig(e){const t=e.conf;const s=t.handleEscapedChars??false;let r=C.expr.runExprSafe(t.searchHead);if(r.endsWith("/"))r.substr(0,r.length-1);let o=C.expr.runExprSafe(t.endpoint);if(!o.startsWith("/"))o=`/${o}`;const a=`${r}${o}`;const n={discovery:{discoverType:"none"},collectMethod:getCollectMethod(o),authentication:t.authentication,collectUrl:a,collectRequestParams:[{name:"search",value:normalizeSearchQuery(C.expr.runExprSafe(t.search))}],collectRequestHeaders:[{name:"accept",value:"'application/json'"}],username:t.username,password:t.password,filter:"(true)",discoverToRoutes:false,timeout:!isNaN(t.timeout)?t.timeout:DEFAULT_TIMEOUT_SECS,disableTimeFilter:t.disableTimeFilter??true,useRoundRobinDns:t.useRoundRobinDns??false,rejectUnauthorized:t.rejectUnauthorized??false,retryRules:t?.retryRules||{type:"backoff",codes:[429,503]},handleEscapedChars:s};if(t.earliest){n.collectRequestParams.push({name:"earliest_time",value:t.earliest})}if(t.latest){n.collectRequestParams.push({name:"latest_time",value:t.latest})}let l=t.outputMode||"json";n.collectRequestParams.push({name:"output_mode",value:l});n.collectRequestParams.push(...t.collectRequestParams??[]);n.collectRequestHeaders.push(...t.collectRequestHeaders??[]);if(t.authentication==="token"||t.authentication==="tokenSecret"){n.token=t?.token;if(!n.token.startsWith("Bearer ")&&!n.token.startsWith("Splunk ")){n.token="Bearer ".concat(n.token)}delete n["password"];delete n["username"]}return{conf:n}}exports.init=async e=>{const t=getCollectorConfig(e);return restC.init(t)};exports.discover=async e=>restC.discover(e);exports.collect=async(e,t)=>restC.collect(e,t);exports.getParser=e=>restC.getParser(e);